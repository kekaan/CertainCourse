syntax = "proto3";

option csharp_namespace = "CertainCourse.Orders.Grpc";

service Orders {
  rpc CancelOrderById(CancelOrderByIdRequest) returns(CancelOrderByIdResponse);
  rpc GetOrderStateById(GetOrderStateByIdRequest) returns(GetOrderStateByIdResponse);
  rpc GetRegions(GetRegionsRequest) returns(GetRegionsResponse);
  rpc GetOrders(GetOrdersRequest) returns(GetOrdersResponse);
  rpc GetOrdersAggregatedByRegion(GetOrdersAggregatedByRegionRequest) returns(GetOrdersAggregatedByRegionResponse);
  rpc GetOrdersByCustomerId(GetOrdersByCustomerIdRequest) returns(GetOrdersByCustomerIdResponse);
}

// ---  CancelOrderById  ---

message CancelOrderByIdRequest {
  int64 id = 1;
}

message CancelOrderByIdResponse {
  bool is_success = 1;
  string error_message = 2;
}

// ---  GetOrderStatusById  ---

message GetOrderStateByIdRequest {
  int64 id = 1;
}

message GetOrderStateByIdResponse {
  OrderState state = 1;
}

enum OrderState {
  ORDER_STATE_UNSPECIFIED = 0;
  ORDER_STATE_CREATED = 1;
  ORDER_STATE_SENT_TO_CUSTOMER = 2;
  ORDER_STATE_DELIVERED = 3;
  ORDER_STATE_LOST = 4;
  ORDER_STATE_CANCELLED = 5;
}

// ---  GetRegions  ---

message GetRegionsRequest {
}

message GetRegionsResponse {
  repeated Region regions = 1;
}

message Region {
  int32 id = 1;
  string name = 2;
}

// ---  GetOrders  ---

message GetOrdersRequest {
  int32 region_id = 1;
  int32 page_size = 2;
  string page_token = 3;
  string order_by = 4;
}

message GetOrdersResponse {
  repeated Order orders = 1;
  string next_page_token = 2;
}

// ---  GetOrdersAggregatedByRegion  ---

message GetOrdersAggregatedByRegionRequest {
  int64 startTime = 1;
  repeated int32 regions_ids = 2;
}

message GetOrdersAggregatedByRegionResponse {
  repeated OrdersAggregatedByRegion orders_aggregated_by_region = 1;
}

message OrdersAggregatedByRegion {
  string region = 1;
  int64 orders_count = 2;
  DecimalValue orders_total_amount = 3;
  double orders_total_weight = 4;
  int32 customers_count = 5;
}

// ---  GetOrdersByCustomerId  ---

message GetOrdersByCustomerIdRequest {
  int32 customerId = 1;
  int64 startTime = 2;
  int32 page_size = 4;
  string page_token = 5;
}

message GetOrdersByCustomerIdResponse {
  repeated Order orders = 1;
  string next_page_token = 2;
}

message Order {
  int64 id = 1;
  int32 goods_count = 2;
  DecimalValue total_amount = 3;
  double total_weight = 4;
  OrderType type = 5;
  int64 create_date = 6;
  string region = 7;
  OrderState state = 8;
  string customer_first_name = 9;
  string customer_last_name = 10;
  Address address = 11;
  string customer_mobile_number = 12;
}

message Address {
  string region = 1;
  string city = 2;
  string street = 3;
  string building = 4;
  string apartment = 5;
  double latitude = 6;
  double longitude = 7;
}

enum OrderType {
  ORDER_TYPE_UNSPECIFIED = 0;
  ORDER_TYPE_WEB = 1;
  ORDER_TYPE_MOBILE = 2;
  ORDER_TYPE_API = 3;
}

message DecimalValue {
  int64 units = 1;
  sfixed32 nanos = 2;
}